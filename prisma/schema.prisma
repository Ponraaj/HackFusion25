generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid())
  name  String
  email String @unique
}

model Admin {
  id    String @id @default(uuid())
  name  String
  email String @unique
}

model Member {
  id         String  @id @default(uuid())
  name       String
  regNo      String  @unique
  dept       String
  year       String
  email      String  @unique
  phoneno    String?
  isTeamLead Boolean
  teamId     String
  gender     String
  team       Team    @relation(fields: [teamId], references: [id], onDelete: Cascade)
}

model Team {
  id              String           @id @default(uuid())
  name            String
  status          Status           @default(pending)
  members         Member[]
  RoundOneWinners RoundOneWinners?
  teamSubmisison  TeamSubmission?
}

model TeamSubmission {
  id            String           @id @default(uuid())
  teamId        String           @unique
  solutionTitle String
  description   String
  problemId     Int
  problem       ProblemStatement @relation(fields: [problemId], references: [sno], onDelete: Cascade)
  team          Team             @relation(fields: [teamId], references: [id], onDelete: Cascade)
}

model ProblemStatement {
  sno            Int              @id @default(autoincrement())
  title          String
  theme          String
  description    String
  teamSubmission TeamSubmission[]
}

model ContactUs {
  id      String @id @default(uuid())
  name    String
  message String
  email   String
  replyId String @unique
  reply   Reply?
}

model Reply {
  id      String    @id @default(uuid())
  message String
  contact ContactUs @relation(fields: [id], references: [id], onDelete: Cascade)
}

model RoundOneWinners {
  id     String @id
  teamId String @unique
  status Status @default(pending)
  Team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)
}

model RoundThreeWinners {
  id     String @id
  teamId String @unique
  status Status @default(pending)
}

model RoundTwoWinners {
  id     String @id
  teamId String @unique
  status Status @default(pending)
}

enum Status {
  pending
  approved
  rejected
}
